<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Board.Host.Api</name>
    </assembly>
    <members>
        <member name="T:Board.Host.Api.Controllers.AdvertController">
            <summary>
            Работа с обьявлениями.
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.#ctor(Board.Application.AppData.Contexts.Adverts.Services.IAdvertService,Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.AdvertController})">
            <summary>
            Работа с обьявлениями.
            </summary>
            <param name="advertisementService">Сервис для работы с обьявлениями.</param>
            <param name="logger">Логгер.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Получить все обьявления отсортированные по дате добавления по убыванию и с пагинацией.
            </summary>
            <param name="page">Номер страницы.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="T:Board.Contracts.Contexts.Adverts.AdvertSummary"/>.</returns>
            <response code="200">Запрос выполнен успешно.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.GetAllFiltered(Board.Contracts.Contexts.Adverts.AdvertFilterRequest,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Получить все обьявления по фильтру и с пагинацией.
            </summary>
            <param name="filter"></param>
            <param name="page"></param>
            <param name="cancellation"></param>
            <returns>Элемент <see cref="T:Board.Contracts.Contexts.Adverts.AdvertSummary"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить обьявление по идентификатору.
            </summary>
            <param name="id">Идентификатор обьявления.</param>
            <param name="cancellation">Токен отмены</param>
            <returns>Элемент <see cref="T:Board.Contracts.Contexts.Adverts.AdvertDetails"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.Create(Board.Contracts.Contexts.Adverts.AdvertAddRequest,System.Threading.CancellationToken)">
            <summary>
            Добавить новое обьявление.
            </summary>
            <param name="addRequest">Элемент <see cref="T:Board.Contracts.Contexts.Adverts.AdvertAddRequest"/>.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Идентификатор нового обьявления.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.Update(System.Guid,Board.Contracts.Contexts.Adverts.AdvertUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Изменить обьявление.
            </summary>
            <param name="id">Идентификатор обьявления.</param>
            <param name="updateRequest">Элемент <see cref="T:Board.Contracts.Contexts.Adverts.AdvertUpdateRequest"/>.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.SoftDeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить обьявление.
            </summary>
            <param name="id">Идентификатор обьявления.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.AdvertController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить обьявление.
            </summary>
            <param name="id">Идентификатор обьявления.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="T:Board.Host.Api.Controllers.AdvertViewController">
            <summary>
            Работа с обьявлениями.
            </summary>
        </member>
        <member name="T:Board.Host.Api.Controllers.CategoryController">
            <summary>
            Контроллер для работы с категориями.
            </summary>
            <response code="500">Произошла внутренняя ошибка.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.#ctor(Board.Application.AppData.Contexts.Categories.Services.ICategoryService)">
            <summary>
            Работа с категориями.
            </summary>
            <param name="categoryService">Сервис категорий.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Получить список всех категорий.
            </summary>
            <param name="cancellation">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <returns>Список моделей категорий <see cref="T:Board.Contracts.Contexts.Categories.CategorySummary"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить категорию по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellation">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="404">Категория с указанным идентификатором не найдена.</response>
            <returns>Модель категории <see cref="T:Board.Contracts.Contexts.Categories.CategoryDetails"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.Create(Board.Contracts.Contexts.Categories.CategoryAddRequest,System.Threading.CancellationToken)">
            <summary>
            Создать новую категорию.
            </summary>
            <param name="createRequest">Модель запроса создания категории <see cref="T:Board.Contracts.Contexts.Categories.CategoryAddRequest"/>.</param>
            <param name="cancellation">Токен отмены.</param>
            <response code="201">Категория успешно создана.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Идентификатор новой категории.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.Update(System.Guid,Board.Contracts.Contexts.Categories.CategoryUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Обновить категорию.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="updateRequest">Модель запроса обновления категории <see cref="T:Board.Contracts.Contexts.Categories.CategoryUpdateRequest"/>.</param>
            <param name="cancellation">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="403">Доступ запрещён.</response>
            <response code="404">Категория с указанным идентификатором не найдена.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель обновленной категории <see cref="T:Board.Contracts.Contexts.Categories.CategoryDetails"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить категорию по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellation">Токен отмены.</param>
            <response code="204">Запрос выполнен успешно.</response>
            <response code="403">Доступ запрещён.</response>
            <response code="404">Категория с указанным идентификатором не найдена.</response>
        </member>
        <member name="T:Board.Host.Api.Controllers.CommentController">
            <summary>
            Работа с комментариями.
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.#ctor(Board.Application.AppData.Contexts.Comments.Services.ICommentService)">
            <summary>
            Работа с комментариями.
            </summary>
            <param name="commentService">Сервис для работы с комментариями.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Получить все комментарии по фильтру и с пагинацией.
            </summary>
            <param name="page">Номер страницы с комментариями.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="!:CommentDto"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.GetAllFiltered(Board.Contracts.Contexts.Comments.CommentFilterRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Получить все комментарии по фильтру и с пагинацией.
            </summary>
            <param name="page">Номер страницы с комментариями.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="!:CommentDto"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить комментарий по идентификатору.
            </summary>
            <param name="id">Идентификатор комментария.</param>
            <param name="cancellation">Токен отмены</param>
            <returns>Элемент <see cref="T:Board.Contracts.Contexts.Comments.CommentDetails"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.Create(Board.Contracts.Contexts.Comments.CommentAddRequest,System.Threading.CancellationToken)">
            <summary>
            Добавить новый комментарий.
            </summary>
            <param name="addRequest">Элемент <see cref="T:Board.Contracts.Contexts.Comments.CommentAddRequest"/>.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Идентификатор нового комментария.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.Update(System.Guid,Board.Contracts.Contexts.Comments.CommentUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Изменить комментарий.
            </summary>
            <param name="id">Идентификатор комментария.</param>
            <param name="updateRequest">Элемент <see cref="T:Board.Contracts.Contexts.Comments.CommentUpdateRequest"/>.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.CommentController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить комментарий.
            </summary>
            <param name="id">Идентификатор комментария.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="T:Board.Host.Api.Controllers.ImageController">
            <summary>
            Работа с пользователями.
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.ImageController.#ctor(Board.Application.AppData.Contexts.Images.Services.IImageService,Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.ImageController})">
            <summary>
            Работа с обьявлениями.
            </summary>
            <param name="advertisementService">Сервис для работы с обьявлениями.</param>
            <param name="logger">Логгер.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.ImageController.GetInfo(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить все обьявления отсортированные по дате добавления по убыванию и с пагинацией.
            </summary>
            <param name="page">Номер страницы.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="T:Board.Contracts.Contexts.Adverts.AdvertSummary"/>.</returns>
            <response code="200">Запрос выполнен успешно.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.ImageController.Upload(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            Получить все обьявления отсортированные по дате добавления по убыванию и с пагинацией.
            </summary>
            <param name="page">Номер страницы.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="T:Board.Contracts.Contexts.Adverts.AdvertSummary"/>.</returns>
            <response code="200">Запрос выполнен успешно.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.ImageController.Download(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить все обьявления отсортированные по дате добавления по убыванию и с пагинацией.
            </summary>
            <param name="page">Номер страницы.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="T:Board.Contracts.Contexts.Adverts.AdvertSummary"/>.</returns>
            <response code="200">Запрос выполнен успешно.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.ImageController.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить все обьявления отсортированные по дате добавления по убыванию и с пагинацией.
            </summary>
            <param name="page">Номер страницы.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="T:Board.Contracts.Contexts.Adverts.AdvertSummary"/>.</returns>
            <response code="200">Запрос выполнен успешно.</response>
        </member>
        <member name="T:Board.Host.Api.Controllers.UserController">
            <summary>
            Работа с пользователями.
            </summary>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.#ctor(Board.Application.AppData.Contexts.Users.Services.IUserService)">
            <summary>
            Работа с пользователями.
            </summary>
            <param name="userService">Сервис для работы с пользователями.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Получить список всех пользователей с пагинацией.
            </summary>
            <param name="take">Количество получаемых пользователей.</param>
            <param name="skip">Количество пропускаемых пользователей.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Коллекция элементов <see cref="T:Board.Contracts.Contexts.Users.UserSummary"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить пользователя по идентификатору.
            </summary>
            <param name="id">Идентификатор пользователя.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Элемент <see cref="!:UserDto"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.GetCurrent(System.Threading.CancellationToken)">
            <summary>
            Получить текущего пользователя.
            </summary>
            <param name="cancellation">Токен отмены.</param>
            <returns>Элемент <see cref="!:UserDto"/>.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.Update(System.Guid,Board.Contracts.Contexts.Users.UserUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Изменить пользователя по идентификатору.
            </summary>
            <param name="id">Идентификатор пользователя.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.ChangeEmail(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Изменить пользователя по идентификатору.
            </summary>
            <param name="newEmail">Новая электронная почта пользователя.</param>
            <param name="token">Сгенерированный токен для изменения почты пользователя.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.SendEmailTokenAsync(Board.Contracts.Contexts.Users.UserGenerateEmailTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Изменить пользователя по идентификатору.
            </summary>
            <param name="request">Элемент <see cref="!:UserChangeEmailDto"/>.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.SendEmailConfirmationTokenAsync(Board.Contracts.Contexts.Users.UserGenerateEmailConfirmationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Изменить пользователя по идентификатору.
            </summary>
            <param name="request">Элемент <see cref="!:UserChangeEmailDto"/>.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.ConfirmEmail(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Изменить пользователя по идентификатору.
            </summary>
            <param name="newEmail">Новая электронная почта пользователя.</param>
            <param name="token">Сгенерированный токен для изменения почты пользователя.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить пользователя по идентификатору.
            </summary>
            <param name="id">Идентификатор пользователя.</param>
            <param name="cancellation">Токен отмены.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.Register(Board.Contracts.Contexts.Users.UserRegisterRequest,System.Threading.CancellationToken)">
            <summary>
            Зарегистрировать пользователя.
            </summary>
            <param name="userRegisterDto">Элемент <see cref="!:UserRegisterDto"/>.</param>
            <param name="cancellation">Токен отмены.</param>
            <returns>Идентификатор нового пользователя.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.Login(Board.Contracts.Contexts.Users.UserLoginRequest,System.Threading.CancellationToken)">
            <summary>
            Залогинить пользователя.
            </summary>
            <param name="userLoginDto">Элемент <see cref="!:UserLoginDto"/>.</param>
            <param name="cancellation"></param>
            <returns>Токен аутентификации.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.UserController.Login(Board.Contracts.Contexts.Users.UserLoginRefreshRequest,System.Threading.CancellationToken)">
            <summary>
            Залогинить пользователя.
            </summary>
            <param name="userLoginDto">Элемент <see cref="!:UserLoginDto"/>.</param>
            <param name="cancellation"></param>
            <returns>Токен аутентификации.</returns>
        </member>
    </members>
</doc>
